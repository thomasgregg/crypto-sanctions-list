name: Update Sanctions List

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:      # Allows manual trigger

jobs:
  update-sanctions:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: List directory contents
      run: ls -la

    - name: Create required directories
      run: |
        mkdir -p data
        mkdir -p scripts

    - name: Install dependencies
      run: |
        npm init -y
        npm install axios cheerio
      working-directory: .

    - name: Check if scripts directory exists
      run: |
        pwd
        ls -la
        ls -la scripts || echo "scripts directory not found"

    - name: Create update script if not exists
      run: |
        cat > scripts/update-sanctions.js << 'EOL'
        const axios = require('axios');
        const cheerio = require('cheerio');
        const fs = require('fs').promises;
        const path = require('path');

        const OUTPUT_FILE = path.join(__dirname, '..', 'data', 'sanctioned-addresses.json');

        async function fetchSanctionedAddresses() {
            try {
                // Initialize with some test data for now
                const addresses = {
                    metadata: {
                        lastUpdated: new Date().toISOString(),
                        sources: ['OFAC SDN List', 'OFAC Recent Actions']
                    },
                    addresses: {
                        "bc1qe7cjq79qw8nf7zc6mvq7vqlwy9phyqx8m5wqz4": {
                            entity: "Lazarus Group",
                            program: "North Korea Sanctions Program",
                            date: "April 2022",
                            reason: "Test entry for GitHub Action verification"
                        }
                    }
                };

                // Ensure data directory exists
                await fs.mkdir(path.dirname(OUTPUT_FILE), { recursive: true });

                // Write to file
                await fs.writeFile(
                    OUTPUT_FILE,
                    JSON.stringify(addresses, null, 2)
                );

                console.log('Successfully updated sanctions list');
                return addresses;
            } catch (error) {
                console.error('Error updating sanctions list:', error);
                throw error;
            }
        }

        // Run the update
        fetchSanctionedAddresses()
          .then(() => console.log('Update completed successfully'))
          .catch(error => {
            console.error('Update failed:', error);
            process.exit(1);
          });
        EOL

    - name: Run update script
      run: |
        echo "Current directory:"
        pwd
        echo "Directory contents:"
        ls -la
        echo "Running script..."
        node scripts/update-sanctions.js

    - name: Check data file
      run: |
        echo "Checking if data file was created:"
        ls -la data/
        cat data/sanctioned-addresses.json

    - name: Commit if changes exist
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git add data/sanctioned-addresses.json
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update sanctions list $(date +'%Y-%m-%d')" && git push)